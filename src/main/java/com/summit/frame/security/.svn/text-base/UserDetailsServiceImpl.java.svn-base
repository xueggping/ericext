/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-sd:src/main/java/project/security/UserDetailsServiceImpl.p.vm.java
 */
package com.summit.frame.security;

import static org.apache.commons.lang.StringUtils.isBlank;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.summit.system.user.bean.UserBean;
import com.summit.system.user.service.UserService;

/**
 * An implementation of Spring Security's UserDetailsService.
 */
@Service("userDetailsService")
@Transactional(readOnly = true)
public class UserDetailsServiceImpl implements UserDetailsService {

	private static final Logger logger = LoggerFactory
			.getLogger(UserDetailsServiceImpl.class);
	@Autowired
	private UserService us;

	public UserDetailsServiceImpl() {
	}

	public UserDetails loadUserByUsername(String username)
			throws UsernameNotFoundException, DataAccessException {

		if (logger.isDebugEnabled()) {
			logger.debug("Security verification for user '" + username + "'");
		}
		if (isBlank(username)) {
			throw new UsernameNotFoundException("Empty username");
		}
		UserBean user = us.queryByUserName(username);
		if (user == null) {
			if (logger.isInfoEnabled()) {
				logger.info("User " + username + " could not be found");
			}
			throw new UsernameNotFoundException("user " + username
					+ " could not be found");
		}
		user.setAuthorities(us.getGrantedAuthoritiesByUserName(user
				.getUsername()));
		return user;
	}
}
